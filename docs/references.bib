@article{harten1994,
	author = {Harten, A.},
	title = {Adaptive Multiresolution Schemes for Shock Computations},
	journal = {Journal of Computational Physics},
	year = {1994},
	volume = {115},
	pages = {319-338},
	number = {2}
}

@ARTICLE{fryxell2000,
  author = {{Fryxell}, B. and {Olson}, K. and {Ricker}, P. and {Timmes}, F.~X. and {Zingale}, M. and {Lamb}, D.~Q. and {MacNeice}, P. and {Rosner}, R. and {Truran}, J.~W. and {Tufo}, H.},
  title = "{FLASH: An Adaptive Mesh Hydrodynamics Code for Modeling Astrophysical Thermonuclear Flashes}",
  journal = {\apjs},
  keywords = {Equation of State, Hydrodynamics, Methods: Numerical, Nuclear Reactions, Nucleosynthesis, Abundances, Stars: General},
  year = 2000,
  month = nov,
  volume = {131},
  number = {1},
  pages = {273-334},
  doi = {10.1086/317361},
  adsurl = {https://ui.adsabs.harvard.edu/abs/2000ApJS..131..273F},
  adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}

@article{macneice2000,
  title = {PARAMESH: A parallel adaptive mesh refinement community toolkit},
  journal = {Computer Physics Communications},
  volume = {126},
  number = {3},
  pages = {330-354},
  year = {2000},
  issn = {0010-4655},
  doi = {https://doi.org/10.1016/S0010-4655(99)00501-9},
  url = {https://www.sciencedirect.com/science/article/pii/S0010465599005019},
  author = {Peter MacNeice and Kevin M. Olson and Clark Mobarry and Rosalinda {de Fainchtein} and Charles Packer},
  abstract = {In this paper we describe a community toolkit which is designed to provide parallel support with adaptive mesh capability for a large and important class of computational models, those using structured, logically Cartesian meshes. The package of Fortran 90 subroutines, called PARAMESH, is designed to provide an application developer with an easy route to extend an existing serial code which uses a logically Cartesian structured mesh into a parallel code with adaptive mesh refinement. Alternatively, in its simplest use, and with minimal effort, it can operate as a domain decomposition tool for users who want to parallelize their serial codes, but who do not wish to use adaptivity. The package can provide them with an incremental evolutionary path for their code, converting it first to uniformly refined parallel code, and then later if they so desire, adding adaptivity.}
}
